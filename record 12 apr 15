 							NoSQL CRUD
 							
 							
1.Write a MongoDB query to create an INVOICE database and collections (CUSTOMER, PRODUCT) and its corresponding documents.
 
test> use INVOICE
switched to db INVOICE 

INVOICE> db.CUSTOMER.insertOne({cust_id:"101",name:"rob",address:"kerala",city:"calicut",phone_no:"9876543212"})

INVOICE> db.CUSTOMER.insertOne({cust_id:"102",name:"tob",address:"kerala",city:"ekm",phone_no:"9765432198"})

INVOICE> db.CUSTOMER.insertOne({ cust_id:"103",name:"mob",address:"kerala",city:"tvm",phone_no:"9654321789"})

INVOICE> db.CUSTOMER.insertOne({ cust_id:"104",name:"sob",address:"kerala",city:"kochi",phone_no:"9134234567"})



INVOICE> db.PRODUCT.insertOne({ p_id:"201",name:"pencil",price:"10"})

INVOICE> db.PRODUCT.insertOne({ p_id:"202",name:"pen",price:"30"})

INVOICE> db.PRODUCT.insertOne({d:"203",name:"book",price:"60"})

INVOICE> db.PRODUCT.insertOne({p_id:"204",name:"sketches",price:"100"}





2.Write a MongoDB query to find all documents from the collection CUSTOMER

INVOICE> db.CUSTOMER.find().pretty()
[
  {
    _id: ObjectId('67fe2f1ab16b46b572d861e9'),
    cust_id: '101',
    name: 'rob',
    address: 'kerala',
    city: 'calicut',
    phone_no: '9876543212'
  },
  {
    _id: ObjectId('67fe2f51b16b46b572d861ea'),
    cust_id: '102',
    name: 'tob',
    address: 'kerala',
    city: 'ekm',
    phone_no: '9765432198'
  },
  {
    _id: ObjectId('67fe2f71b16b46b572d861eb'),
    cust_id: '103',
    name: 'mob',
    address: 'kerala',
    city: 'tvm',
    phone_no: '9654321789'
  },
  {
    _id: ObjectId('67fe2f92b16b46b572d861ec'),
    cust_id: '104',
    name: 'sob',
    address: 'kerala',
    city: 'kochi',
    phone_no: '9134234567'
  }
]


INVOICE> db.PRODUCT.find().pretty()
[
  {
    '0': { p_id: '201', name: 'pencil', price: '10' },
    _id: ObjectId('67fe309eb16b46b572d861f1')
  },
  {
    _id: ObjectId('67fe30a2b16b46b572d861f2'),
    p_id: '202',
    name: 'pen',
    price: '30'
  },
  {
    _id: ObjectId('67fe30a5b16b46b572d861f3'),
    d: '203',
    name: 'book',
    price: '60'
  },
  {
    _id: ObjectId('67fe30a8b16b46b572d861f4'),
    p_id: '204',
    name: 'sketches',
    price: '100'
  }
]





3.Write a MongoDB query to update the city in the collection CUSTOMER

INVOICE> db.CUSTOMER.updateOne({cust_id:"104"},{$set:{city:"ekm"}})

{
    _id: ObjectId('67fe2f92b16b46b572d861ec'),
    cust_id: '104',
    name: 'sob',
    address: 'kerala',
    city: 'ekm',
    phone_no: '9134234567'
  }





4.Write a MongoDB query to delete the first matched document whose city is “Calicut”.
INVOICE> db.CUSTOMER.deleteOne({city:"calicut"})
{ acknowledged: true, deletedCount: 1 }

//VERIFIED
